include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/wait.h>

#define MAX_COMMAND_LENGTH 100

int main()
{
char command[MAX_COMMAND_LENGTH];
while (1)
printf("simple_shell> ");
fflush(stdout);
if (fgets(command, MAX_COMMAND_LENGTH, stdin) == NULL) {
printf("\n");
break;
}
command[strcspn(command, "\n")] = '\0';
pid_t pid = fork();
if (pid < 0) {
perror("Fork error");
exit(EXIT_FAILURE);
} else if (pid == 0) {
if (execlp(command, command, (char *)NULL) == -1) {
fprintf(stderr, "Command not found: %s\n", command);
exit(EXIT_FAILURE);
}
} else {
int status;
waitpid(pid, &status, 0);
if (WIFEXITED(status) && WEXITSTATUS(status) != 0) {
fprintf(stderr, "Error executing command: %s\n", command);
}
}
return 0;
}
